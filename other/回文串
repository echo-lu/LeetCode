/*
 * 给定一个字符串，问是否能通过添加一个字母将其变为回文串。
 * 一行一个由小写字母构成的字符串，字符串长度小于等于10。
 * 输出答案(YES\NO).
 */


import java.text.DecimalFormat;
import java.util.Scanner;
import java.util.Stack;

/**
 *
 * @author H
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        Scanner in = new Scanner(System.in);
        while(true) {
            String str = in.next();
            String str1 = new StringBuffer(str).reverse().toString();
            int size = getLCS(str,str1);
            int len = str.length();
            if(len-size == 1) {
                System.out.println("YES");
            }else {
                System.out.println("NO");
            }
            
        }
    }
    
    public static int getLCS(String x,String y) {
        char[] s1 = x.toCharArray();
        char[] s2 = y.toCharArray();
        int[][] array = new int[x.length()+1][y.length()+1];
        
        for(int j=0;j<array[0].length;j++) {
            array[0][j] = 0;
        }
        for(int i=0;i<array.length;i++) {
            array[i][0] = 0;
        }
        
        for(int m=1;m<array.length;m++) {
            for(int n=1;n<array[m].length;n++) {
                if(s1[m-1] == s2[n-1]) {
                    array[m][n] = array[m-1][n-1] +1;
                }else {
                    array[m][n] = max(array[m-1][n],array[m][n-1]);
                }
            }
        }
        Stack stack = new Stack();
        int i = x.length()-1;
        int j = y.length()-1;
        while((i>=0)&&(j>=0)) {
            if(s1[i] == s2[j]) {
                stack.push(s1[i]);
                i--;
                j--;
            }else {
                if(array[i+1][j]>array[i][j+1]) {
                    j --;
                }else {
                    i--;
                }
            }
        }
        return stack.size();
    }
    
    public static int max(int a,int b) {
        return (a>b)?a:b;
    }
    
}
