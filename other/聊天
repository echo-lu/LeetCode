/*
 * A和B是好友，他们经常在空闲时间聊天，A的空闲时间为[a1 ,b1 ],[a2 ,b2 ]..[ap ,bp ]。
 * B的空闲时间是[c1 +t,d1 +t]..[cq +t,dq +t],这里t为B的起床时间。这些时间包括了边界点。
 * B的起床时间为[l,r]的一个时刻。若一个起床时间能使两人在任一时刻聊天，那么这个时间就是合适的，问有多少个合适的起床时间？
 * 第一行数据四个整数：p,q,l,r（1≤p,q≤50,0≤l≤r≤1000)。接下来p行数据每一行有一对整数ai，bi(0≤aii+1>bi,ci+1>di
 * 输出答案个数
 */

import java.text.DecimalFormat;
import java.util.Scanner;

/**
 *
 * @author H
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        Scanner in = new Scanner(System.in);
        while(true) {
           int p = in.nextInt();
           int q = in.nextInt();
           int l = in.nextInt();
           int r = in.nextInt();
           
           int[] a = new int[p];
           int[] b = new int[p];
           int[] c = new int[q];
           int[] d = new int[q];
           int[] flag =new int[r-l+1];
           
           for(int i=0;i<p;i++) {
               a[i] = in.nextInt();
               b[i] = in.nextInt();
           }
           for(int j=0;j<q;j++) {
               c[j] = in.nextInt();
               d[j] = in.nextInt();
           }
           
           for(int i=0;i<p;i++) {
               for(int t=l;t<=r;t++) {
                   for(int j=0;j<q;j++) {
                       int cj = c[j]+t;
                       int dj = d[j] + t;
                       if((cj>=a[i] && cj<=b[i]) || (dj>=a[i] && dj<=b[i]) 
                               || (a[i]>=cj && a[i]<=dj) || (b[i]>=cj && b[i]<=dj)) {
                           flag[t-l] = 1;
                       }
                   }
               }
           }
           int count = 0;
           for(int i=0;i<flag.length;i++) {
               if(flag[i] == 1) count++;
           }
           System.out.println(count);
        }
    }
    
}
